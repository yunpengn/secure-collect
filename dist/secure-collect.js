!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.secureCollect=t():e.secureCollect=t()}(self,(function(){return(()=>{"use strict";var e={d:(t,o)=>{for(var n in o)e.o(o,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:o[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};function o(){const e=function(){const e=new Map,t=document.getElementsByTagName("meta");for(let o=0;o<t.length;o++){const n=t[o];if("input-key"!==n.getAttribute("name"))return;n.getAttribute("content").split(",").forEach((t=>{const o=t.trim();if(2!==o.split("=").length)return void console.log("The given key '"+trimmer+"' is in invalid format");const n=o.split("=")[0].trim(),r=o.split("=")[1].trim();e.set(n,r)}))}return e}();console.log(e)}return e.r(t),e.d(t,{init:()=>o}),t})()}));